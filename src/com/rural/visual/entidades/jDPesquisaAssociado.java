/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rural.visual.entidades;

import com.rural.model.Associado;
import com.rural.persistence.dao.AssociadoDAO;
import com.rural.uteis.ValidatorUtil;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author diego
 */
public class jDPesquisaAssociado extends javax.swing.JDialog {

    /**
     * Creates new form jDPesquisaAssociado
     */
    public jDPesquisaAssociado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jTAssociados.getModel();
        jTAssociados.setRowSorter(new TableRowSorter(modelo));
        jTAssociados.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTAssociados.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTAssociados.getColumnModel().getColumn(2).setPreferredWidth(500);
        jTAssociados.getColumnModel().getColumn(3).setPreferredWidth(250);
        try {
            readJTable();
        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
            Logger.getLogger(jDPesquisaAssociado.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    jDPesquisaAssociado() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGFiltros = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTFValorFiltro = new javax.swing.JTextField();
        jBFiltrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jRBCodigo = new javax.swing.JRadioButton();
        jRBNome = new javax.swing.JRadioButton();
        jRBCPF = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAssociados = new javax.swing.JTable();
        jBCancelar = new javax.swing.JButton();
        jBSelecionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Opções de Pesquisa");

        jLabel1.setText("Pesquisa associados");

        jTFValorFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFValorFiltroKeyPressed(evt);
            }
        });

        jBFiltrar.setText("Filtrar");
        jBFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFiltrarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros de Pesquisa"));

        bGFiltros.add(jRBCodigo);
        jRBCodigo.setText("Código");

        bGFiltros.add(jRBNome);
        jRBNome.setSelected(true);
        jRBNome.setText("Nome");

        bGFiltros.add(jRBCPF);
        jRBCPF.setText("CPF");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRBCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBCPF))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jRBCodigo)
                .addComponent(jRBNome)
                .addComponent(jRBCPF))
        );

        jTAssociados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Apelido", "Nome", "CPF"
            }
        ));
        jTAssociados.getTableHeader().setReorderingAllowed(false);
        jTAssociados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTAssociadosMouseClicked(evt);
            }
        });
        jTAssociados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAssociadosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTAssociados);

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBSelecionar.setText("Selecionar");
        jBSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFValorFiltro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBFiltrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBSelecionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFValorFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBFiltrar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBSelecionar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTAssociadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTAssociadosMouseClicked
        int linha = -1;

        linha = jTAssociados.getSelectedRow();

        if (linha >= 0) {
            int id = (int) jTAssociados.getValueAt(linha, 0);
            associado = dao.findById(id);
        }
    }//GEN-LAST:event_jTAssociadosMouseClicked

    private void jBSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSelecionarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSelecionarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        associado = null;
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFiltrarActionPerformed
        String filtroSelecionado = jRBCodigo.isSelected() ? "Código"
                : jRBNome.isSelected() ? "Nome"
                : jRBCPF.isSelected() ? "CPF" : "Não reconhecido";
        List<Associado> associados = new ArrayList<Associado>();

        switch (filtroSelecionado) {
            case "Nome":
                try {
                    associados = dao.findAssociadoByFiltros(jTFValorFiltro.getText(), null, null);
                } catch (ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
                    Logger.getLogger(jDPesquisaAssociado.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;

            case "CPF":
                try {
                    associados = dao.findAssociadoByFiltros(null, jTFValorFiltro.getText(), null);
                } catch (ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
                    Logger.getLogger(jDPesquisaAssociado.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;

            case "Código":
                try {
                    if (ValidatorUtil.isNullOrEmpty(jTFValorFiltro.getText())) {
                        associados = dao.findAssociadoByFiltros(null, null, null);
                    } else {
                        associados = dao.findAssociadoByFiltros(null, null, Integer.parseInt(jTFValorFiltro.getText()));
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Apenas números são permitidos para o código.");
                } catch (ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
                    Logger.getLogger(jDPesquisaAssociado.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;

            default:
                try {
                    readJTable();
                } catch (ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
                    Logger.getLogger(jDPesquisaAssociado.class.getName()).log(Level.SEVERE, null, ex);
                }
        }

        preencherTabela(associados);
    }//GEN-LAST:event_jBFiltrarActionPerformed

    private void jTAssociadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAssociadosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jBSelecionar.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            jBCancelar.doClick();
            setVisible(false);
        }
    }//GEN-LAST:event_jTAssociadosKeyPressed

    private void jTFValorFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFValorFiltroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jBFiltrar.doClick();
        }
    }//GEN-LAST:event_jTFValorFiltroKeyPressed

    public Associado getAssociado() {
        return this.associado;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jDPesquisaAssociado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jDPesquisaAssociado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jDPesquisaAssociado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jDPesquisaAssociado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jDPesquisaAssociado dialog = new jDPesquisaAssociado(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGFiltros;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBFiltrar;
    private javax.swing.JButton jBSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRBCPF;
    private javax.swing.JRadioButton jRBCodigo;
    private javax.swing.JRadioButton jRBNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTAssociados;
    private javax.swing.JTextField jTFValorFiltro;
    // End of variables declaration//GEN-END:variables

    public void readJTable() throws InstantiationException, IllegalAccessException, ClassNotFoundException {
        DefaultTableModel modelo = (DefaultTableModel) jTAssociados.getModel();
        dao = new AssociadoDAO();

        for (Associado a : dao.findAssociadoByFiltros(null, null, null)) {

            modelo.addRow(new Object[]{
                a.getId(),
                a.getApelido(),
                a.getNome(),
                a.getCpf()
            });

        }

        jTAssociados.requestFocus();
        jTAssociados.setDragEnabled(false);
        jTAssociados.setColumnSelectionAllowed(false);
        jTAssociados.setDefaultEditor(Object.class, null);
    }

    private void preencherTabela(Collection<Associado> associados) {
        limparTabela();
        DefaultTableModel modelo = (DefaultTableModel) jTAssociados.getModel();
        dao = new AssociadoDAO();

        associados.forEach((a) -> {
            modelo.addRow(new Object[]{
                a.getId(),
                a.getApelido(),
                a.getNome(),
                a.getCpf()
            });
        });
    }

    private void limparTabela() {
        DefaultTableModel modelo = (DefaultTableModel) jTAssociados.getModel();

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(modelo.getRowCount() - 1);
        }
    }

    private static Associado associado;
    private AssociadoDAO dao;
    private ArrayList<Associado> AssociadoList = new ArrayList();

}
